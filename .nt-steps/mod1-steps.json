[
  {
    "content_id": "826491ca-f466-4bdf-94b6-d07b9966f857",
    "content_name": "Add Middleware/Configuration to Startup.cs",
    "tasks": [
      {
        "description": "1.1 - Add MVC Middleware to WebApplication",
        "contents": "In the `Program.cs` file, call `AddControllersWithViews();` on `builder.Services` to add support for MVC middleware.",
        "checks": [
          {
            "type": "CustomTest",
            "description": "1.1 - Add MVC Middleware to WebApplicationBuilder.Services",
            "command": "bash {{ test }}",
            "contents": "semgrep -e 'builder.Services.AddControllersWithViews();' -l C# --exclude CompletedExercise",
            "failed_pattern": "0 findings"
          }
        ]
      },
      {
        "description": "1.2 - Add UseRouting in Configure",
        "contents": "Add a call to `UseRouting()` on `app`.",
        "checks": [
          {
            "type": "CustomTest",
            "description": "1.2 - Add UseRouting in Configure",
            "command": "bash {{ test }}",
            "contents": "semgrep -e 'app.UseRouting();' -l C# --exclude CompletedExercise",
            "failed_pattern": "0 findings"
          }
        ]
      },
      {
        "description": "1.3 - Map the Default Controller Routes",
        "contents": "Map the following `default` controller route \n ```\napp.MapControllerRoute(\n  name: \"default\", \n  pattern: \"{controller=Home}/{action=Index}/{id?}\");\n```",
        "checks": [
          {
            "type": "CustomTest",
            "description": "1.3 - Add UseEndpoints in Configure",
            "command": "bash {{ test }}",
            "contents": "semgrep -e 'app.MapControllerRoute(name: ..., pattern: ...)' -l C# --exclude CompletedExercise",
            "failed_pattern": "0 findings"
          }
        ]
      },
      {
        "description": "1.4 - Configure Exception Handling",
        "contents": "Following the `app` declaration, add a condition that checks if `app.Environment` is set to Development using the `IsDevelopment()` method.  - If not in Development, it should call `UseExceptionHandler` on `app` and pass it the argument `\"/Home/Error\"`.",
        "checks": [
          {
            "type": "CustomTest",
            "description": "1.4 - Configure Exception Handling",
            "command": "bash {{ test }}",
            "contents": "semgrep -e 'app.Environment.IsDevelopment()' -l C# --exclude CompletedExercise; \nsemgrep -e 'app.UseExceptionHandler(\"/Home/Error\");' -l C# --exclude CompletedExercise",
            "failed_pattern": "0 findings"
          }
        ]
      }
    ],
    "steps": [
      {
        "name": "Add Middleware/Configuration to Startup.cs",
        "blocks": [
          {
            "type": "markdown",
            "contents": "Configure application to use MVC Framework as well as developer exception pages and error handler. Creating a view and controller to allow the user to access a home page and error page. \n\nIf you have any questions you can reference the `CompletedExercise` folder\n\n> Note: Please wait to run `Checks` until the `Terminal` says \n> ```\n> Ready to Run Checks\n> ```  "
          },
          {
            "type": "task",
            "contents": "1.1 - Add MVC Middleware to WebApplication"
          },
          {
            "type": "task",
            "contents": "1.2 - Add UseRouting in Configure"
          },
          {
            "type": "task",
            "contents": "1.3 - Map the Default Controller Routes"
          },
          {
            "type": "task",
            "contents": "1.4 - Configure Exception Handling"
          }
        ]
      }
    ]
  }
]